0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@3.5.2
3 info using node@v8.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/sprintive/Desktop/Projects/react-autocomplete',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/sprintive/.npm/react-autocomplete/1.8.1/package.tgz not in flight; packing
9 info lifecycle react-autocomplete@1.8.1~prepublish: react-autocomplete@1.8.1
10 silly lifecycle react-autocomplete@1.8.1~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/sprintive/.npm/react-autocomplete/1.8.1/package.tgz',
11 verbose tar pack   '/home/sprintive/Desktop/Projects/react-autocomplete' ]
12 verbose tarball /home/sprintive/.npm/react-autocomplete/1.8.1/package.tgz
13 verbose folder /home/sprintive/Desktop/Projects/react-autocomplete
14 verbose addLocalTarball adding from inside cache /home/sprintive/.npm/react-autocomplete/1.8.1/package.tgz
15 silly cache afterAdd react-autocomplete@1.8.1
16 verbose afterAdd /home/sprintive/.npm/react-autocomplete/1.8.1/package/package.json not in flight; writing
17 verbose afterAdd /home/sprintive/.npm/react-autocomplete/1.8.1/package/package.json written
18 silly publish { name: 'react-autocomplete',
18 silly publish   version: '1.8.1',
18 silly publish   description: 'Accessible, extensible, Autocomplete for React.js',
18 silly publish   main: './build/lib/Autocomplete.js',
18 silly publish   files: [ 'build/lib/index.js', 'build/lib/Autocomplete.js', 'dist' ],
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/reactjs/react-autocomplete.git' },
18 silly publish   homepage: 'https://github.com/reactjs/react-autocomplete',
18 silly publish   bugs: { url: 'https://github.com/reactjs/react-autocomplete/issues' },
18 silly publish   directories: { example: 'examples' },
18 silly publish   scripts:
18 silly publish    { 'generate-readme': 'scripty',
18 silly publish      'gh-pages': 'scripty',
18 silly publish      release: 'scripty',
18 silly publish      build: 'scripty',
18 silly publish      'build:component': 'scripty',
18 silly publish      'build:examples': 'scripty',
18 silly publish      test: 'scripty',
18 silly publish      'test:lint': 'scripty',
18 silly publish      'test:jest': 'scripty',
18 silly publish      coverage: 'scripty',
18 silly publish      start: 'SCRIPTY_PARALLEL=true scripty' },
18 silly publish   authors: [ 'Ryan Florence <rpflorence@gmail.com>' ],
18 silly publish   license: 'MIT',
18 silly publish   devDependencies:
18 silly publish    { 'babel-cli': '^6.5.1',
18 silly publish      'babel-eslint': '6.1.2',
18 silly publish      'babel-jest': '^20.0.3',
18 silly publish      'babel-preset-es2015': '^6.5.0',
18 silly publish      'babel-preset-react': '^6.5.0',
18 silly publish      'babel-preset-react-hmre': '^1.1.1',
18 silly publish      'babel-preset-stage-0': '^6.5.0',
18 silly publish      babelify: '^7.3.0',
18 silly publish      browserify: '^13.3.0',
18 silly publish      'browserify-hmr': '^0.3.5',
18 silly publish      enzyme: '^2.8.2',
18 silly publish      'enzyme-to-json': '^1.5.1',
18 silly publish      eslint: '^2.13.1',
18 silly publish      'eslint-config-rackt': '^1.1.1',
18 silly publish      'eslint-plugin-react': '^6.10.3',
18 silly publish      exorcist: '^0.4.0',
18 silly publish      jest: '^20.0.4',
18 silly publish      'lodash.flow': '^3.5.0',
18 silly publish      'lodash.map': '^4.6.0',
18 silly publish      'lodash.sortby': '^4.7.0',
18 silly publish      react: '^15.5.4',
18 silly publish      'react-docgen': '^2.15.0',
18 silly publish      'react-dom': '^15.5.4',
18 silly publish      'react-test-renderer': '^15.5.4',
18 silly publish      scripty: '^1.7.1',
18 silly publish      st: '^1.2.0',
18 silly publish      'uglify-js': '^2.7.5',
18 silly publish      watchify: '^3.8.0',
18 silly publish      youemdee: '^1.0.0' },
18 silly publish   tags: [ 'react', 'autocomplete', 'combobox', 'a11y' ],
18 silly publish   keywords: [],
18 silly publish   dependencies:
18 silly publish    { '@fortawesome/fontawesome-svg-core': '^1.2.6',
18 silly publish      '@fortawesome/free-solid-svg-icons': '^5.4.1',
18 silly publish      '@fortawesome/react-fontawesome': '^0.1.3',
18 silly publish      'dom-scroll-into-view': '1.0.1',
18 silly publish      'prop-types': '^15.5.10' },
18 silly publish   peerDependencies:
18 silly publish    { react: '^0.14.7 || ^15.0.0-0 || ^16.0.0-0',
18 silly publish      'react-dom': '^0.14.7 || ^15.0.0-0 || ^16.0.0-0' },
18 silly publish   jest:
18 silly publish    { snapshotSerializers: [ 'enzyme-to-json/serializer' ],
18 silly publish      modulePathIgnorePatterns: [ '<rootDir>/build/', '<rootDir>/dist/' ],
18 silly publish      testPathIgnorePatterns: [ '<rootDir>/build/', '<rootDir>/dist/' ] },
18 silly publish   readme: '# React Autocomplete [![Travis build status](https://travis-ci.org/reactjs/react-autocomplete.svg?branch=master)](https://travis-ci.org/reactjs/react-autocomplete/)\n\nAccessible, extensible, Autocomplete for React.js.\n\n```jsx\n<Autocomplete\n  getItemValue={(item) => item.label}\n  items={[\n    { label: \'apple\' },\n    { label: \'banana\' },\n    { label: \'pear\' }\n  ]}\n  renderItem={(item, isHighlighted) =>\n    <div style={{ background: isHighlighted ? \'lightgray\' : \'white\' }}>\n      {item.label}\n    </div>\n  }\n  value={value}\n  onChange={(e) => value = e.target.value}\n  onSelect={(val) => value = val}\n/>\n```\n\nCheck out [more examples](https://reactcommunity.org/react-autocomplete/) and get stuck right in with the [online editor](http://jsbin.com/mipesawapi/edit?js,output).\n\n## Install\n\n### npm\n\n```bash\nnpm install --save react-autocomplete\n```\n\n### yarn\n\n```bash\nyarn add react-autocomplete\n```\n\n### AMD/UMD\n\n* Development: [https://unpkg.com/react-autocomplete@1.8.1/dist/react-autocomplete.js](https://unpkg.com/react-autocomplete@1.8.1/dist/react-autocomplete.js)\n* Production: [https://unpkg.com/react-autocomplete@1.8.1/dist/react-autocomplete.min.js](https://unpkg.com/react-autocomplete@1.8.1/dist/react-autocomplete.min.js)\n\n## API\n\n### Props\n\n#### `getItemValue: Function`\nArguments: `item: Any`\n\nUsed to read the display value from each entry in `items`.\n\n#### `items: Array`\nThe items to display in the dropdown menu\n\n#### `renderItem: Function`\nArguments: `item: Any, isHighlighted: Boolean, styles: Object`\n\nInvoked for each entry in `items` that also passes `shouldItemRender` to\ngenerate the render tree for each item in the dropdown menu. `styles` is\nan optional set of styles that can be applied to improve the look/feel\nof the items in the dropdown menu.\n\n#### `autoHighlight: Boolean` (optional)\nDefault value: `true`\n\nWhether or not to automatically highlight the top match in the dropdown\nmenu.\n\n#### `clearButtonStyle: Object` (optional)\nDefault value: `{}`\n\nInvoked when the clear button is pushed\n\n#### `inputProps: Object` (optional)\nDefault value: `{}`\n\nProps passed to `props.renderInput`. By default these props will be\napplied to the `<input />` element rendered by `Autocomplete`, unless you\nhave specified a custom value for `props.renderInput`. Any properties\nsupported by `HTMLInputElement` can be specified, apart from the\nfollowing which are set by `Autocomplete`: value, autoComplete, role,\naria-autocomplete. `inputProps` is commonly used for (but not limited to)\nplaceholder, event handlers (onFocus, onBlur, etc.), autoFocus, etc..\n\n#### `isClearable: Boolean` (optional)\nDefault value: `false`\n\nUsed to override the internal logic which displays/hides the dropdown\nmenu. This is useful if you want to force a certain state based on your\nUX/business logic. Use it together with `onMenuVisibilityChange` for\nfine-grained control over the dropdown menu dynamics.\n\n#### `isItemSelectable: Function` (optional)\nDefault value: `function() { return true }`\n\nArguments: `item: Any`\n\nInvoked when attempting to select an item. The return value is used to\ndetermine whether the item should be selectable or not.\nBy default all items are selectable.\n\n#### `menuStyle: Object` (optional)\nDefault value:\n```jsx\n{\n  borderRadius: \'3px\',\n  boxShadow: \'0 2px 12px rgba(0, 0, 0, 0.1)\',\n  background: \'rgba(255, 255, 255, 0.9)\',\n  padding: \'2px 0\',\n  fontSize: \'90%\',\n  position: \'fixed\',\n  overflow: \'auto\',\n  maxHeight: \'50%\', // TODO: don\'t cheat, let it flow to the bottom\n}\n```\n\nStyles that are applied to the dropdown menu in the default `renderMenu`\nimplementation. If you override `renderMenu` and you want to use\n`menuStyle` you must manually apply them (`this.props.menuStyle`).\n\n#### `onChange: Function` (optional)\nDefault value: `function() {}`\n\nArguments: `event: Event, value: String`\n\nInvoked every time the user changes the input\'s value.\n\n#### `onClear: Function` (optional)\nDefault value: `function() {}`\n\nUsed to render a clear button on the `<input>`\nNote: On default, it has no functionality.\nYou should define \'onClear\' prop as a func.\n\n#### `onMenuVisibilityChange: Function` (optional)\nDefault value: `function() {}`\n\nArguments: `isOpen: Boolean`\n\nInvoked every time the dropdown menu\'s visibility changes (i.e. every\ntime it is displayed/hidden).\n\n#### `onSelect: Function` (optional)\nDefault value: `function() {}`\n\nArguments: `value: String, item: Any`\n\nInvoked when the user selects an item from the dropdown menu.\n\n#### `open: Boolean` (optional)\nWhether to add style to the icon. It can override the existing style.\n\n#### `renderInput: Function` (optional)\nDefault value:\n```jsx\nfunction(props) {\n  return <input {...props} />\n}\n```\n\nArguments: `props: Object`\n\nInvoked to generate the input element. The `props` argument is the result\nof merging `props.inputProps` with a selection of props that are required\nboth for functionality and accessibility. At the very least you need to\napply `props.ref` and all `props.on<event>` event handlers. Failing to do\nthis will cause `Autocomplete` to behave unexpectedly.\n\n#### `renderMenu: Function` (optional)\nDefault value:\n```jsx\nfunction(items, value, style) {\n  return <div style={{ ...style, ...this.menuStyle }} children={items}/>\n}\n```\n\nArguments: `items: Array<Any>, value: String, styles: Object`\n\nInvoked to generate the render tree for the dropdown menu. Ensure the\nreturned tree includes every entry in `items` or else the highlight order\nand keyboard navigation logic will break. `styles` will contain\n{ top, left, minWidth } which are the coordinates of the top-left corner\nand the width of the dropdown menu.\n\n#### `selectOnBlur: Boolean` (optional)\nDefault value: `false`\n\nWhether or not to automatically select the highlighted item when the\n`<input>` loses focus.\n\n#### `shouldItemRender: Function` (optional)\nArguments: `item: Any, value: String`\n\nInvoked for each entry in `items` and its return value is used to\ndetermine whether or not it should be displayed in the dropdown menu.\nBy default all items are always rendered.\n\n#### `sortItems: Function` (optional)\nArguments: `itemA: Any, itemB: Any, value: String`\n\nThe function which is used to sort `items` before display.\n\n#### `value: Any` (optional)\nDefault value: `\'\'`\n\nThe value to display in the input field\n\n#### `wrapperProps: Object` (optional)\nDefault value: `{}`\n\nProps that are applied to the element which wraps the `<input />` and\ndropdown menu elements rendered by `Autocomplete`.\n\n#### `wrapperStyle: Object` (optional)\nDefault value:\n```jsx\n{\n  display: \'inline-block\',\n  position: \'relative\',\n}\n```\n\nThis is a shorthand for `wrapperProps={{ style: <your styles> }}`.\nNote that `wrapperStyle` is applied before `wrapperProps`, so the latter\nwill win if it contains a `style` entry.\n\n\n### Imperative API\n\nIn addition to the props there is an API available on the mounted element which is similar to that of `HTMLInputElement`. In other words: you can access most of the common `<input>` methods directly on an `Autocomplete` instance. An example:\n\n```jsx\nclass MyComponent extends Component {\n  componentDidMount() {\n    // Focus the input and select "world"\n    this.input.focus()\n    this.input.setSelectionRange(6, 11)\n  }\n  render() {\n    return (\n      <Autocomplete\n        ref={el => this.input = el}\n        value="hello world"\n        ...\n      />\n    )\n  }\n}\n```\n\n# Development\nYou can start a local development environment with `npm start`. This command starts a static file server on [localhost:8080](http://localhost:8080) which serves the examples in `examples/`. Hot-reload mechanisms are in place which means you don\'t have to refresh the page or restart the build for changes to take effect.\n\n## Tests!\n\nRun them:\n`npm test`\n\nWrite them:\n`lib/__tests__/Autocomplete-test.js`\n\nCheck your work:\n`npm run coverage`\n\n## Scripts\nRun with `npm run <script>`.\n\n### gh-pages\nBuilds the examples and assembles a commit which is pushed to `origin/gh-pages`, then cleans up your working directory. Note: This script will `git checkout master` before building.\n\n### release\nTakes the same argument as `npm publish`, i.e. `[major|minor|patch|x.x.x]`, then tags a new version, publishes, and pushes the version commit and tag to `origin/master`. Usage: `npm run release -- [major|minor|patch|x.x.x]`. Remember to update the CHANGELOG before releasing!\n\n### build\nRuns the build scripts detailed below.\n\n### build:component\nTranspiles the source in `lib/` and outputs it to `build/`, as well as creating a UMD bundle in `dist/`.\n\n### build:examples\nCreates bundles for each of the examples, which is used for pushing to `origin/gh-pages`.\n\n### test\nRuns the test scripts detailed below.\n\n### test:lint\nRuns `eslint` on the source.\n\n### test:jest\nRuns the unit tests with `jest`.\n\n### coverage\nRuns the unit tests and creates a code coverage report.\n\n### start\nBuilds all the examples and starts a static file server on [localhost:8080](http://localhost:8080). Any changes made to `lib/Autocomplete.js` and the examples are automatically compiled and transmitted to the browser, i.e. there\'s no need to refresh the page or restart the build during development. This script is the perfect companion when making changes to this repo, since you can use the examples as a test-bed for development.\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'd5d31adcacc4726c3aa2934d469ce44be74a893b',
18 silly publish   _id: 'react-autocomplete@1.8.1',
18 silly publish   _shasum: '3587f726e5db8bb7b67746fe64f48a260ec09b8b',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name react-autocomplete
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/react-autocomplete
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /home/sprintive/.npm/react-autocomplete/1.8.1/package.tgz
26 verbose request uri https://registry.npmjs.org/react-autocomplete
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 2:07:28 PM
29 verbose request using bearer token for auth
30 verbose request id 0f16cab6b41f7944
31 http request PUT https://registry.npmjs.org/react-autocomplete
32 http 403 https://registry.npmjs.org/react-autocomplete
33 verbose headers { date: 'Thu, 25 Oct 2018 11:07:30 GMT',
33 verbose headers   'content-type': 'application/json',
33 verbose headers   'transfer-encoding': 'chunked',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'set-cookie':
33 verbose headers    [ '__cfduid=d4b6ed92fd7617f4438661a1bee16cea01540465648; expires=Fri, 25-Oct-19 11:07:28 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
33 verbose headers   'cf-ray': '46f438408e75c2c9-FRA',
33 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
33 verbose headers   vary: 'Accept-Encoding',
33 verbose headers   server: 'cloudflare',
33 verbose headers   'content-encoding': 'gzip' }
34 verbose request invalidating /home/sprintive/.npm/registry.npmjs.org/react-autocomplete on PUT
35 error publish Failed PUT 403
36 verbose stack Error: You do not have permission to publish "react-autocomplete". Are you logged in as the correct user? : react-autocomplete
36 verbose stack     at makeError (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at /usr/share/npm/node_modules/npm-registry-client/lib/request.js:178:7
36 verbose stack     at Gunzip.onEnd (zlib.js:131:5)
36 verbose stack     at emitNone (events.js:111:20)
36 verbose stack     at Gunzip.emit (events.js:208:7)
36 verbose stack     at endReadableNT (_stream_readable.js:1064:12)
36 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:138:11)
36 verbose stack     at process._tickCallback (internal/process/next_tick.js:180:9)
37 verbose statusCode 403
38 verbose pkgid react-autocomplete
39 verbose cwd /home/sprintive/Desktop/Projects/react-autocomplete
40 error Linux 4.15.0-36-generic
41 error argv "/usr/bin/node" "/usr/bin/npm" "publish"
42 error node v8.10.0
43 error npm  v3.5.2
44 error code E403
45 error You do not have permission to publish "react-autocomplete". Are you logged in as the correct user? : react-autocomplete
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
